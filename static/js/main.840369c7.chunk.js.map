{"version":3,"sources":["Components/UploadPhotoButton.js","Components/AllImages.js","Components/NavBar.js","App.js","index.js"],"names":["firebase","apiKey","storageBucket","storage","UploadPhotoButton","ref","child","useState","currImage","setCurrImage","url","changeUrl","progress","setProgress","value","max","src","alt","height","width","type","onChange","event","target","files","onClick","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","allImages","listRef","lastUrl","Array","listAll","res","items","forEach","itemRef","catch","NavBar","App","window","location","origin","className","AllImages","ReactDOM","render","document","getElementById"],"mappings":"6RAUAA,gBALuB,CACrBC,OAAQ,0CACRC,cAAe,sCAMjB,IAAIC,EAAUH,YAiDCI,GA9CEJ,YAAmBK,MAGNC,MAAM,iBAEV,WAAO,IAAD,EACIC,mBAAS,MADb,mBACvBC,EADuB,KACZC,EADY,OAELF,mBAAS,MAFJ,mBAEvBG,EAFuB,KAElBC,EAFkB,OAGEJ,mBAAS,GAHX,mBAGvBK,EAHuB,KAGbC,EAHa,KA0B9B,OACE,6BACE,8BAAUC,MAAOF,EAAUG,IAAI,QAC/B,6BACA,6BACA,yBAAKC,IAAKN,GAAO,qCAAsCO,IAAI,iBAAiBC,OAAO,MAAMC,MAAM,QAC/F,6BACA,6BACA,2BAAOC,KAAK,OAAOC,SA7BG,SAAAC,GACzBb,EAAaa,EAAMC,OAAOC,MAAM,OA6B7B,4BAAQC,QA1Bc,WACTtB,EAAQE,IAAR,iBAAsBG,EAAUkB,OAAQC,IAAInB,GACpDoB,GAAG,iBACV,SAACC,GACC,IAAMjB,EAAWkB,KAAKC,MAAOF,EAASG,iBAAmBH,EAASI,WAAY,KAC9EpB,EAAYD,MACX,SAACsB,GAEFC,QAAQC,IAAIF,MACX,WACD/B,EAAQE,IAAI,UAAUC,MAAME,EAAUkB,MAAMW,iBAAiBC,MAAK,SAAA5B,GAChEyB,QAAQC,IAAI1B,GACZC,EAAUD,WAcZ,UACA,gC,QCxBS6B,EA7BG,WAElB,IACIC,EADaxC,YAAmBK,MACXC,MAAM,WAI3BmC,GAFM,YAAOC,MAAM,IAET,IAcb,OAZDF,EAAQG,UAAUL,MAAK,SAASM,GAC9BA,EAAIC,MAAMC,SAAQ,SAASC,GACzBA,EAAQV,iBAAiBC,MAAK,SAAS5B,GACrC+B,EAAU/B,WAGbsC,OAAM,SAASd,GAChBC,QAAQC,IAAIF,MAGbC,QAAQC,IAAIK,GAGV,6BACK,yBAAKzB,IAAKyB,IADf,MCfYQ,EATA,WACb,OACE,6BACE,mCACA,wCCyBSC,GAnBAC,OAAOC,SAASC,OAOnB,WAEV,OACE,yBAAKC,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,SCpBJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.840369c7.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport React, { useState } from 'react';\n\n// Set the configuration for your app\n// TODO: Replace with your app's config object\nconst firebaseConfig = {\n  apiKey: 'AIzaSyALKHTz_Lv92B1EZvTEjqvIKnNDrQVQNgw',\n  storageBucket: 'gs://artificer-f8573.appspot.com/'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar storage = firebase.storage();\n\n// Create a root reference\nvar storageRef = firebase.storage().ref();\n\n// Create a reference to 'mountains.jpg'\nvar mountainsRef = storageRef.child('mountains.jpg');\n\nconst UploadPhotoButton = () => {\n  const [currImage, setCurrImage] = useState(null);\n  const [url, changeUrl] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const fileSelectHandler = event => {\n   setCurrImage(event.target.files[0]);\n  }\n\n  const fileUploadHandler = () => {\n    const upload = storage.ref(`images/${currImage.name}`).put(currImage);\n    upload.on('state_changed',\n    (snapshot) => {\n      const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes)*100);\n      setProgress(progress);\n    }, (error) => {\n      //error function\n      console.log(error);\n    }, () => {\n      storage.ref('images').child(currImage.name).getDownloadURL().then(url => {\n        console.log(url);\n        changeUrl(url);\n      })\n    });\n  }\n\n  return (\n    <div>\n      <progress value={progress} max=\"100\" />\n      <br />\n      <br />\n      <img src={url || 'http://via.placeholder.com/400x300'} alt=\"Uploaded Image\" height=\"300\" width=\"400\"/>\n      <br />\n      <br />\n      <input type=\"file\" onChange={fileSelectHandler}/>\n      <button onClick={fileUploadHandler}>Upload</button>\n      <br />\n    </div>\n  );\n}\n\nexport default UploadPhotoButton;\n","import React from 'react';\nimport Post from './Post';\nimport * as firebase from 'firebase';\n\nconst allImages = () => {\n  // Create a reference under which you want to list\nlet storageRef = firebase.storage().ref();\nlet listRef = storageRef.child('images/');\n\nlet images = [...Array(3)];\nlet i = 0;\nlet lastUrl = \"\";\n// Find all the prefixes and items.\nlistRef.listAll().then(function(res) {\n  res.items.forEach(function(itemRef) {\n    itemRef.getDownloadURL().then(function(url) {\n      lastUrl = url;\n    });\n  });\n}).catch(function(error) {\n  console.log(error);\n});\n\n console.log(lastUrl);\n\n return (\n   <div>\n        <img src={lastUrl} />;\n   </div>\n )\n\n}\n\nexport default allImages;\n","import React from 'react'\n\nconst NavBar = () => {\n  return (\n    <div>\n      <p>Home</p>\n      <p>Profile</p>\n    </div>\n  )\n}\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport './App.css';\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\n// import { Security, LoginCallback } from '@okta/okta-react';\nimport LogButton from './Components/LogButton';\nimport axios from 'axios';\nimport UploadPhotoButton from './Components/UploadPhotoButton';\nimport AllImages from './Components/AllImages';\nimport NavBar from './Components/NavBar'\n\nconst config = {\n  issuer: 'https://dev-136257.okta.com/oauth2/default',\n  redirectUri: window.location.origin + '/implicit/callback',\n  clientId: '0oa3nezs5WnZ3K7z64x6',\n  pkce: true\n};\n\n\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n    <NavBar />\n    <UploadPhotoButton />\n    <AllImages />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}